
name: PMDK
on: [push, pull_request]

env:
    GITHUB_REPO:    pmem/pmdk
    DOCKERHUB_REPO: pmem/pmdk

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USER:          ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_PASSWORD:      ${{ secrets.DOCKERHUB_PASSWORD }}
      DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
      HOST_WORKDIR:   /home/runner/work/pmdk/pmdk
      WORKDIR:        utils/docker
      PMDK_CC:        gcc
      PMDK_CXX:       g++
      MAKE_PKG:       0
      REMOTE_TESTS:   1
      VALGRIND:       1
      SRC_CHECKERS:   0
    strategy:
      matrix:
        CONFIG: ["N=1 OS=ubuntu OS_VER=18.04 FAULT_INJECTION=1 TEST_BUILD=debug"]
#                 "N=2 OS=ubuntu OS_VER=18.04 FAULT_INJECTION=1 TEST_BUILD=nondebug UBSAN=1",
#                 "N=3 OS=ubuntu OS_VER=18.04 PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=debug SRC_CHECKERS=1",
#                 "N=4 OS=ubuntu OS_VER=18.04 PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=nondebug",
#                 "N=5 OS=fedora OS_VER=31    PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=debug",
#                 "N=6 OS=fedora OS_VER=31    PMDK_CC=clang PMDK_CXX=clang++ TEST_BUILD=nondebug AUTO_DOC_UPDATE=1",
#                "N=10 OS=ubuntu OS_VER=18.04 COVERAGE=1 FAULT_INJECTION=1 TEST_BUILD=debug"]
    steps:
       - name: setup perf1a
         run: sudo sh -c "cat /proc/sys/kernel/perf_event_paranoid"

       - name: setup perf1b
         run: sudo sh -c "echo -1 > /proc/sys/kernel/perf_event_paranoid"

       - name: setup perf part2
         run: sudo chmod a+r /proc/kallsyms

       - name: setup perf part3a
         run: sudo sh -c "cat /proc/sys/kernel/kptr_restrict"

       - name: setup perf part3b
         run: sudo sh -c "echo 0 > /proc/sys/kernel/kptr_restrict"

       - name: Clone the git repo
         uses: actions/checkout@v2
         with:
            fetch-depth: 50

       - name: Pull or rebuild the image
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build-CI.sh

       - name: Push the image
         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh; fi"
