#!/bin/bash -e
#
# Copyright 2016, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

export UNITTEST_NAME=file_preload/nested_dirs
export UNITTEST_NUM=2

# standard unit test setup
. ../unittest/unittest.sh

require_test_type medium
require_build_type debug nondebug
require_fs_type any

setup

expect_normal_exit ../../tools/mkfs.pmemfile/mkfs.pmemfile $DIR/dummy_fs 16m

mkdir -p $DIR/dummy_mount_point

export TEST_LD_PRELOAD=libpmemfile.so
export PMEMFILE_POOLS=$DIR/dummy_mount_point:$DIR/dummy_fs

export PMEMFILE_PRELOAD_LOG=pmemfile_preload.log
export INTERCEPT_LOG=intercept.log
export INTERCEPT_LOG_NO_PID=1

expect_abnormal_exit mkdir $DIR/dummy_mount_point/nonexistent/dummy_dir_a &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir_other &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/test_subdir &> /dev/null

expect_normal_exit cp dummy_file_a $DIR/dummy_mount_point/test_dir/file_a
expect_normal_exit cp dummy_file_b $DIR/dummy_mount_point/test_dir/test_subdir/file_b
expect_normal_exit cp $DIR/dummy_mount_point/test_dir/file_a file_a.log
expect_normal_exit cp $DIR/dummy_mount_point/test_dir/test_subdir/file_b file_b.log

cmp file_a.log dummy_file_a
cmp file_b.log dummy_file_b

expect_normal_exit cp $DIR/dummy_mount_point/test_dir/./../test_dir/file_a file_a.log
expect_normal_exit cp $DIR/dummy_mount_point/test_dir/test_subdir/../test_subdir/./file_b file_b.log

cmp file_a.log dummy_file_a
cmp file_b.log dummy_file_b

expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h/i &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h/i/j &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h/i/j/k &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h/i/j/k/l &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h/i/j/k/l/m &> /dev/null
expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h/i/j/k/l/m/n &> /dev/null

for dir_index in {0..64}
do
	expect_normal_exit mkdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/x$dir_index &> /dev/null
done

expect_normal_exit ls -o --time-style=+"" $DIR/dummy_mount_point/test_dir | sed 's/\s\+/ /g' > file_preload_lsl2.log
expect_normal_exit ls -o --time-style=+"" $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f | sed 's/\s\+/ /g' > file_preload_lsl_f2.log
expect_normal_exit ls -o --time-style=+"" $DIR/dummy_mount_point/test_dir/a | sed 's/\s\+/ /g' > file_preload_lsl_a2.log
expect_normal_exit ls -o --time-style=+"" $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g | sed 's/\s\+/ /g' > file_preload_lsl_g2.log
expect_normal_exit rmdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/x33 &> /dev/null
expect_normal_exit ls -o --time-style=+"" $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g | sed 's/\s\+/ /g' > file_preload_lsl_g_no33_2.log
expect_normal_exit rmdir $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g/h/i/../../x32 &> /dev/null
expect_normal_exit ls -o --time-style=+"" $DIR/dummy_mount_point/test_dir/a/b/c/d/e/f/g | sed 's/\s\+/ /g' > file_preload_lsl_g_no33_no32_2.log

check

pass
