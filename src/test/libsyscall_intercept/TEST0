#!/bin/bash -e
#
# Copyright 2016, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

export UNITTEST_NAME=libcintercept/TEST0
export UNITTEST_NUM=0

# standard unit test setup
. ../unittest/unittest.sh

require_test_type short
require_build_type debug nondebug
require_fs_type none

setup

rm -f libcintercept0.all.log

export TEST_LD_PRELOAD=libsyscall_intercept.so
export INTERCEPT_LOG=libcintercept$UNITTEST_NUM.all.log

# The test_libcintercept executable is only a dummy program,
# doing a few file operations. The EXESUFFIX isn't really needed here right now.
# This is actually testing the intercepting library, not this executable.
expect_normal_exit ./test_libcintercept_libc$EXESUFFIX \
	test_libcintercept.c > /dev/null

export INTERCEPT_LOG=libcintercept_pthread$UNITTEST_NUM.all.log

expect_normal_exit ./test_libcintercept_libc_lpthread$EXESUFFIX \
	test_libcintercept.c > /dev/null

# Filter for file operations in the log, before running check.
# The local libc implementation can do other things, e.g. brk syscalls while
# initializing, and we can't write a portable enough match file
# to match such implementation specific syscalls line-by-line
grep "\<open\>\|\<write\>\|\<read\>\|\<close\>\|\<fstat\>\|\<clone\>\|\<wait4\>" \
	libcintercept$UNITTEST_NUM.all.log > \
	libcintercept$UNITTEST_NUM.log

grep "\<open\>\|\<write\>\|\<read\>\|\<close\>\|\<fstat\>\|\<clone\>\|\<wait4\>" \
	libcintercept_pthread$UNITTEST_NUM.all.log > \
	libcintercept_pthread$UNITTEST_NUM.log

check

pass
